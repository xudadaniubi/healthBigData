<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boku.www.mapper.TThesisForChineseMapper" >
    <resultMap id="BaseResultMap" type="com.boku.www.pojo.TThesisForChinese" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="DOI" property="doi" jdbcType="VARCHAR" />
        <result column="literature_resources" property="literatureResources" jdbcType="VARCHAR" />
        <result column="ISSN" property="issn" jdbcType="VARCHAR" />
        <result column="year" property="year" jdbcType="VARCHAR" />
        <result column="roll" property="roll" jdbcType="VARCHAR" />
        <result column="journal" property="journal" jdbcType="VARCHAR" />
        <result column="page" property="page" jdbcType="VARCHAR" />
        <result column="author_company" property="authorCompany" jdbcType="VARCHAR" />
        <result column="author_company_id" property="authorCompanyId" jdbcType="VARCHAR" />
        <result column="area" property="area" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="confirm_status" property="confirmStatus" jdbcType="VARCHAR" />
        <result column="keywords" property="keywords" jdbcType="VARCHAR" />
        <result column="subject" property="subject" jdbcType="VARCHAR" />
        <result column="core_perio" property="corePerio" jdbcType="VARCHAR" />
        <result column="first_author" property="firstAuthor" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, title, author, DOI, literature_resources, ISSN, year, roll, journal, page, author_company,
        author_company_id, area, status, confirm_status, keywords, subject, core_perio, first_author
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.boku.www.pojo.TThesisForChineseExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_thesis_for_chinese
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_thesis_for_chinese
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_thesis_for_chinese
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.boku.www.pojo.TThesisForChineseExample" >
        delete from t_thesis_for_chinese
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.boku.www.pojo.TThesisForChinese" >
        insert into t_thesis_for_chinese (id, title, author,
        DOI, literature_resources, ISSN,
        year, roll, journal,
        page, author_company, author_company_id,
        area, status, confirm_status,
        keywords, subject, core_perio,
        first_author)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
        #{doi,jdbcType=VARCHAR}, #{literatureResources,jdbcType=VARCHAR}, #{issn,jdbcType=VARCHAR},
        #{year,jdbcType=VARCHAR}, #{roll,jdbcType=VARCHAR}, #{journal,jdbcType=VARCHAR},
        #{page,jdbcType=VARCHAR}, #{authorCompany,jdbcType=VARCHAR}, #{authorCompanyId,jdbcType=VARCHAR},
        #{area,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{confirmStatus,jdbcType=VARCHAR},
        #{keywords,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{corePerio,jdbcType=VARCHAR},
        #{firstAuthor,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.boku.www.pojo.TThesisForChinese" >
        insert into t_thesis_for_chinese
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="author != null" >
                author,
            </if>
            <if test="doi != null" >
                DOI,
            </if>
            <if test="literatureResources != null" >
                literature_resources,
            </if>
            <if test="issn != null" >
                ISSN,
            </if>
            <if test="year != null" >
                year,
            </if>
            <if test="roll != null" >
                roll,
            </if>
            <if test="journal != null" >
                journal,
            </if>
            <if test="page != null" >
                page,
            </if>
            <if test="authorCompany != null" >
                author_company,
            </if>
            <if test="authorCompanyId != null" >
                author_company_id,
            </if>
            <if test="area != null" >
                area,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="confirmStatus != null" >
                confirm_status,
            </if>
            <if test="keywords != null" >
                keywords,
            </if>
            <if test="subject != null" >
                subject,
            </if>
            <if test="corePerio != null" >
                core_perio,
            </if>
            <if test="firstAuthor != null" >
                first_author,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null" >
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="doi != null" >
                #{doi,jdbcType=VARCHAR},
            </if>
            <if test="literatureResources != null" >
                #{literatureResources,jdbcType=VARCHAR},
            </if>
            <if test="issn != null" >
                #{issn,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                #{year,jdbcType=VARCHAR},
            </if>
            <if test="roll != null" >
                #{roll,jdbcType=VARCHAR},
            </if>
            <if test="journal != null" >
                #{journal,jdbcType=VARCHAR},
            </if>
            <if test="page != null" >
                #{page,jdbcType=VARCHAR},
            </if>
            <if test="authorCompany != null" >
                #{authorCompany,jdbcType=VARCHAR},
            </if>
            <if test="authorCompanyId != null" >
                #{authorCompanyId,jdbcType=VARCHAR},
            </if>
            <if test="area != null" >
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="confirmStatus != null" >
                #{confirmStatus,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null" >
                #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="subject != null" >
                #{subject,jdbcType=VARCHAR},
            </if>
            <if test="corePerio != null" >
                #{corePerio,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthor != null" >
                #{firstAuthor,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.boku.www.pojo.TThesisForChineseExample" resultType="java.lang.Integer" >
        select count(*) from t_thesis_for_chinese
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update t_thesis_for_chinese
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null" >
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null" >
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.doi != null" >
                DOI = #{record.doi,jdbcType=VARCHAR},
            </if>
            <if test="record.literatureResources != null" >
                literature_resources = #{record.literatureResources,jdbcType=VARCHAR},
            </if>
            <if test="record.issn != null" >
                ISSN = #{record.issn,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null" >
                year = #{record.year,jdbcType=VARCHAR},
            </if>
            <if test="record.roll != null" >
                roll = #{record.roll,jdbcType=VARCHAR},
            </if>
            <if test="record.journal != null" >
                journal = #{record.journal,jdbcType=VARCHAR},
            </if>
            <if test="record.page != null" >
                page = #{record.page,jdbcType=VARCHAR},
            </if>
            <if test="record.authorCompany != null" >
                author_company = #{record.authorCompany,jdbcType=VARCHAR},
            </if>
            <if test="record.authorCompanyId != null" >
                author_company_id = #{record.authorCompanyId,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null" >
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.confirmStatus != null" >
                confirm_status = #{record.confirmStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.keywords != null" >
                keywords = #{record.keywords,jdbcType=VARCHAR},
            </if>
            <if test="record.subject != null" >
                subject = #{record.subject,jdbcType=VARCHAR},
            </if>
            <if test="record.corePerio != null" >
                core_perio = #{record.corePerio,jdbcType=VARCHAR},
            </if>
            <if test="record.firstAuthor != null" >
                first_author = #{record.firstAuthor,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update t_thesis_for_chinese
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        DOI = #{record.doi,jdbcType=VARCHAR},
        literature_resources = #{record.literatureResources,jdbcType=VARCHAR},
        ISSN = #{record.issn,jdbcType=VARCHAR},
        year = #{record.year,jdbcType=VARCHAR},
        roll = #{record.roll,jdbcType=VARCHAR},
        journal = #{record.journal,jdbcType=VARCHAR},
        page = #{record.page,jdbcType=VARCHAR},
        author_company = #{record.authorCompany,jdbcType=VARCHAR},
        author_company_id = #{record.authorCompanyId,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        confirm_status = #{record.confirmStatus,jdbcType=VARCHAR},
        keywords = #{record.keywords,jdbcType=VARCHAR},
        subject = #{record.subject,jdbcType=VARCHAR},
        core_perio = #{record.corePerio,jdbcType=VARCHAR},
        first_author = #{record.firstAuthor,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.boku.www.pojo.TThesisForChinese" >
        update t_thesis_for_chinese
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null" >
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="doi != null" >
                DOI = #{doi,jdbcType=VARCHAR},
            </if>
            <if test="literatureResources != null" >
                literature_resources = #{literatureResources,jdbcType=VARCHAR},
            </if>
            <if test="issn != null" >
                ISSN = #{issn,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                year = #{year,jdbcType=VARCHAR},
            </if>
            <if test="roll != null" >
                roll = #{roll,jdbcType=VARCHAR},
            </if>
            <if test="journal != null" >
                journal = #{journal,jdbcType=VARCHAR},
            </if>
            <if test="page != null" >
                page = #{page,jdbcType=VARCHAR},
            </if>
            <if test="authorCompany != null" >
                author_company = #{authorCompany,jdbcType=VARCHAR},
            </if>
            <if test="authorCompanyId != null" >
                author_company_id = #{authorCompanyId,jdbcType=VARCHAR},
            </if>
            <if test="area != null" >
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="confirmStatus != null" >
                confirm_status = #{confirmStatus,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null" >
                keywords = #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="subject != null" >
                subject = #{subject,jdbcType=VARCHAR},
            </if>
            <if test="corePerio != null" >
                core_perio = #{corePerio,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthor != null" >
                first_author = #{firstAuthor,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.boku.www.pojo.TThesisForChinese" >
        update t_thesis_for_chinese
        set title = #{title,jdbcType=VARCHAR},
        author = #{author,jdbcType=VARCHAR},
        DOI = #{doi,jdbcType=VARCHAR},
        literature_resources = #{literatureResources,jdbcType=VARCHAR},
        ISSN = #{issn,jdbcType=VARCHAR},
        year = #{year,jdbcType=VARCHAR},
        roll = #{roll,jdbcType=VARCHAR},
        journal = #{journal,jdbcType=VARCHAR},
        page = #{page,jdbcType=VARCHAR},
        author_company = #{authorCompany,jdbcType=VARCHAR},
        author_company_id = #{authorCompanyId,jdbcType=VARCHAR},
        area = #{area,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        confirm_status = #{confirmStatus,jdbcType=VARCHAR},
        keywords = #{keywords,jdbcType=VARCHAR},
        subject = #{subject,jdbcType=VARCHAR},
        core_perio = #{corePerio,jdbcType=VARCHAR},
        first_author = #{firstAuthor,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap id="CountResultMap" type="com.boku.www.utils.Count" >
        <result column="area" property="area" jdbcType="VARCHAR" />
        <result column="count" property="count" jdbcType="INTEGER" />
    </resultMap>
    <!--统计各地区论文的数量-->
    <select id="countTheNumberOfThesisForChineseInEachArea" resultMap="CountResultMap">
        SELECT city AS area,sum(thesis_for_chinese_num) AS count FROM t_area_and_company GROUP BY city;
    </select>

    <select id="findByPage"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_thesis_for_chinese  limit #{currIndex} , #{pageSize};
    </select>


    <resultMap id="CommonBaseResultMap" type="com.boku.www.pojo.TbWanfangDocumentCommon" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="publish_year" property="publishYear" jdbcType="VARCHAR" />
        <result column="perioNum" property="perionum" jdbcType="VARCHAR" />
        <result column="subject_class_codes" property="subjectClassCodes" jdbcType="VARCHAR" />
        <result column="subject_class_name" property="subjectClassName" jdbcType="VARCHAR" />
        <result column="page_cnt" property="pageCnt" jdbcType="INTEGER" />
        <result column="refdoc_cnt" property="refdocCnt" jdbcType="INTEGER" />
        <result column="share_num" property="shareNum" jdbcType="INTEGER" />
        <result column="pro_pub_date" property="proPubDate" jdbcType="BIGINT" />
        <result column="cite_num" property="citeNum" jdbcType="INTEGER" />
        <result column="linkdoc_cnt" property="linkdocCnt" jdbcType="INTEGER" />
        <result column="cited_cnt" property="citedCnt" jdbcType="INTEGER" />
        <result column="data_sort" property="dataSort" jdbcType="INTEGER" />
        <result column="subarea" property="subarea" jdbcType="VARCHAR" />
        <result column="publish_year02" property="publishYear02" jdbcType="BIGINT" />
        <result column="tag_num" property="tagNum" jdbcType="INTEGER" />
        <result column="abstract_reading_num" property="abstractReadingNum" jdbcType="INTEGER" />
        <result column="full_pubdate" property="fullPubdate" jdbcType="BIGINT" />
        <result column="common_year" property="commonYear" jdbcType="VARCHAR" />
        <result column="thirdparty_links_num" property="thirdpartyLinksNum" jdbcType="INTEGER" />
        <result column="abst_webdate" property="abstWebdate" jdbcType="BIGINT" />
        <result column="article_seq" property="articleSeq" jdbcType="INTEGER" />
        <result column="import_num" property="importNum" jdbcType="INTEGER" />
        <result column="common_sort_time" property="commonSortTime" jdbcType="BIGINT" />
        <result column="collection_num" property="collectionNum" jdbcType="INTEGER" />
        <result column="download_num" property="downloadNum" jdbcType="INTEGER" />
        <result column="fulltext_reading_num" property="fulltextReadingNum" jdbcType="INTEGER" />
        <result column="note_num" property="noteNum" jdbcType="INTEGER" />
        <result column="updatetime" property="updatetime" jdbcType="BIGINT" />
        <result column="affectoi" property="affectoi" jdbcType="VARCHAR" />
        <result column="is_wanfang" property="isWanfang" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="CommonResultMapWithBLOBs" type="com.boku.www.pojo.TbWanfangDocumentCommonWithBLOBs" extends="CommonBaseResultMap" >
        <result column="title" property="title" jdbcType="LONGVARCHAR" />
        <result column="authors_name" property="authorsName" jdbcType="LONGVARCHAR" />
        <result column="authors_unit" property="authorsUnit" jdbcType="LONGVARCHAR" />
        <result column="summary" property="summary" jdbcType="LONGVARCHAR" />
        <result column="keywords" property="keywords" jdbcType="LONGVARCHAR" />
        <result column="perio_id" property="perioId" jdbcType="LONGVARCHAR" />
        <result column="perio_title" property="perioTitle" jdbcType="LONGVARCHAR" />
        <result column="fund_info" property="fundInfo" jdbcType="LONGVARCHAR" />
        <result column="issn" property="issn" jdbcType="LONGVARCHAR" />
        <result column="doi" property="doi" jdbcType="LONGVARCHAR" />
        <result column="ref" property="ref" jdbcType="LONGVARCHAR" />
        <result column="cn" property="cn" jdbcType="LONGVARCHAR" />
        <result column="fund_info02" property="fundInfo02" jdbcType="LONGVARCHAR" />
        <result column="page_range" property="pageRange" jdbcType="LONGVARCHAR" />
        <result column="auto_keys" property="autoKeys" jdbcType="LONGVARCHAR" />
        <result column="doc_num" property="docNum" jdbcType="LONGVARCHAR" />
        <result column="text_author" property="textAuthor" jdbcType="LONGVARCHAR" />
        <result column="language" property="language" jdbcType="LONGVARCHAR" />
        <result column="abstract_url" property="abstractUrl" jdbcType="LONGVARCHAR" />
        <result column="scholar_id" property="scholarId" jdbcType="LONGVARCHAR" />
        <result column="auto_classcode" property="autoClasscode" jdbcType="LONGVARCHAR" />
        <result column="class_type" property="classType" jdbcType="LONGVARCHAR" />
        <result column="trans_title" property="transTitle" jdbcType="LONGVARCHAR" />
        <result column="is_fulltext" property="isFulltext" jdbcType="LONGVARCHAR" />
        <result column="issue_num" property="issueNum" jdbcType="LONGVARCHAR" />
        <result column="perio_title02" property="perioTitle02" jdbcType="LONGVARCHAR" />
        <result column="unit_name" property="unitName" jdbcType="LONGVARCHAR" />
        <result column="unit_name02" property="unitName02" jdbcType="LONGVARCHAR" />
        <result column="data_state" property="dataState" jdbcType="LONGVARCHAR" />
        <result column="doct_collect" property="doctCollect" jdbcType="LONGVARCHAR" />
        <result column="random_id" property="randomId" jdbcType="LONGVARCHAR" />
        <result column="trans_authors" property="transAuthors" jdbcType="LONGVARCHAR" />
        <result column="literature_code" property="literatureCode" jdbcType="LONGVARCHAR" />
        <result column="new_org" property="newOrg" jdbcType="LONGVARCHAR" />
        <result column="perio_title_en" property="perioTitleEn" jdbcType="LONGVARCHAR" />
        <result column="core_perio" property="corePerio" jdbcType="LONGVARCHAR" />
        <result column="auth_area" property="authArea" jdbcType="LONGVARCHAR" />
        <result column="article_id" property="articleId" jdbcType="LONGVARCHAR" />
        <result column="auto_classcode_level" property="autoClasscodeLevel" jdbcType="LONGVARCHAR" />
        <result column="first_authors" property="firstAuthors" jdbcType="LONGVARCHAR" />
        <result column="hxkbj_istic" property="hxkbjIstic" jdbcType="LONGVARCHAR" />
        <result column="op" property="op" jdbcType="LONGVARCHAR" />
        <result column="issue_id" property="issueId" jdbcType="LONGVARCHAR" />
        <result column="full_url" property="fullUrl" jdbcType="LONGVARCHAR" />
        <result column="orig_pub_date" property="origPubDate" jdbcType="LONGVARCHAR" />
        <result column="source_db" property="sourceDb" jdbcType="LONGVARCHAR" />
        <result column="authorsandunit" property="authorsandunit" jdbcType="LONGVARCHAR" />
        <result column="column_name" property="columnName" jdbcType="LONGVARCHAR" />
        <result column="orig_classcode" property="origClasscode" jdbcType="LONGVARCHAR" />
        <result column="service_model" property="serviceModel" jdbcType="LONGVARCHAR" />
        <result column="first_publish" property="firstPublish" jdbcType="LONGVARCHAR" />
        <result column="text_keywords" property="textKeywords" jdbcType="LONGVARCHAR" />
        <result column="is_oa" property="isOa" jdbcType="LONGVARCHAR" />
        <result column="head_words" property="headWords" jdbcType="LONGVARCHAR" />
        <result column="subject_classcode_level" property="subjectClasscodeLevel" jdbcType="LONGVARCHAR" />
        <result column="text_unit" property="textUnit" jdbcType="LONGVARCHAR" />
    </resultMap>
    <select id="selectDataByTitle" resultMap="CommonResultMapWithBLOBs">
        SELECT * FROM tb_wanfang_document_common where title = #{title}
    </select>
    <!--第一作者top20（如杭州市内单位排名）-->
    <select id="selectFirstAuthorBeforeTwentiethInEachArea" resultMap="CountResultMap">
        SELECT first_author AS area, count(*) AS count FROM t_thesis_for_chinese WHERE area LIKE #{area} AND first_author IS NOT NULL  GROUP BY first_author ORDER BY count desc LIMIT 0,#{top};
    </select>
    <insert id="insertFirstAuthorBeforeTwentiethInEachArea" parameterType="com.boku.www.pojo.TCountTopFirstAuthor" >
        insert into t_count_top_first_author (id, count, area,
        first_author)
        values (#{id,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR},
        #{firstAuthor,jdbcType=VARCHAR})
    </insert>
    <resultMap id="BaseResultMapFirstAuthorBeforeTwentiethInEachArea" type="com.boku.www.pojo.TCountTopFirstAuthor" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="area" property="area" jdbcType="VARCHAR" />
        <result column="first_author" property="firstAuthor" jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectFirstAuthorBeforeTwentiethInEachAreaByTable" resultMap="BaseResultMapFirstAuthorBeforeTwentiethInEachArea">
        select * from t_count_top_first_author WHERE area = #{area};
    </select>

    <!--学科top20（R6）-->
    <select id="selectSujectBeforeTwentieth" resultMap="CountResultMap">
        SELECT subject AS  area,count(*) AS count  FROM t_thesis_for_chinese WHERE `subject` IS NOT NULL GROUP BY subject ORDER BY count DESC LIMIT 0,20
    </select>

    <!--插入中文论文中学科top20-->
    <insert id="insertSujectBeforeTwentieth" parameterType="com.boku.www.pojo.TCountTopSubject">
        insert into t_count_top_subject (id, subject, top_num,
        count, type)
        values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{topNum,jdbcType=INTEGER},
        #{count,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR})
    </insert>
    <resultMap id="BaseResultMapTopSubject" type="com.boku.www.pojo.TCountTopSubject" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="subject" property="subject" jdbcType="VARCHAR" />
        <result column="top_num" property="topNum" jdbcType="INTEGER" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>
    <!--查询中文论文中学科top20-->
    <select id="selectSujectTopTwentieth" resultMap="BaseResultMapTopSubject" >
        SELECT id, subject, top_num,count, type FROM t_count_top_subject WHERE type = '中文' ORDER BY count DESC  LIMIT 0,20
    </select>

    <resultMap id="BaseResultMapTopKeywords" type="com.boku.www.pojo.TCountTopKeywords" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="keywords" property="keywords" jdbcType="VARCHAR" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="top_num" property="topNum" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>
    <!--插入英文论文中关键字top20-->
    <insert id="insertKeywordsBeforeTwentieth" parameterType="com.boku.www.pojo.TCountTopKeywords" >
        insert into t_count_top_keywords (id, keywords, count,
        top_num, type,area)
        values (#{id,jdbcType=INTEGER}, #{keywords,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
        #{topNum,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR})
    </insert>
    <!--查询英文论文中关键字top20-->
    <select id="selectKeywordsBeforeTwentieth" resultMap="BaseResultMapTopKeywords">
        SELECT id, keywords, top_num,count, type,area FROM t_count_top_keywords WHERE  type = #{type} AND  area = #{area} ORDER BY count DESC  LIMIT 0,20
    </select>
    <resultMap id="BaseResultMapCountTopCorePerio" type="com.boku.www.pojo.TCountTopCorePerio" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="company" property="company" jdbcType="VARCHAR" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="subject" property="subject" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>
    <!--核心期刊发文单位top20-->
    <insert id="insertCountTopCorePerio" parameterType="com.boku.www.pojo.TCountTopCorePerio" >
        insert into t_count_top_core_perio (id, company, count,
        subject, type)
        values (#{id,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
        #{subject,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR})
    </insert>
    <select id="selectBeforeTwentiethInCorePerioByType" resultMap="BaseResultMapCountTopCorePerio">
        SELECT id, company, count, subject,type FROM t_count_top_core_perio WHERE type = #{type}
    </select>
    <!--核心期刊发文学科top20-->
    <select id="selectSujectBeforeTwentiethInCorePerio" resultMap="CountResultMap">
       SELECT subject AS area ,count(*) count  FROM t_thesis_for_chinese WHERE core_perio IS NOT NULL AND `subject` IS NOT NULL GROUP BY subject ORDER BY count DESC LIMIT 0,20;
    </select>
    <!--核心期刊中期刊文献量top20-->
    <select id="selectBeforeTwentiethInCorePerio" resultMap="CountResultMap">
        SELECT literature_resources AS area , count(core_perio) AS count FROM t_thesis_for_chinese GROUP BY literature_resources ORDER BY count DESC LIMIT 0,20;
    </select>
    <!--根据作者查询与之合作的所有作者-->
    <select id="selectAuthorByExample" resultType="string">
        SELECT author FROM t_thesis_for_chinese WHERE author LIKE #{author}
    </select>
    <!--根据作者查询与之合作的所有单位-->
    <select id="selectCompanyByExample" resultType="string">
        SELECT author_company FROM t_thesis_for_chinese WHERE author_company LIKE #{company}
    </select>

    <select id="selecTthesisForChineseTitle" parameterType="string" resultType="string">
        select title from t_thesis_for_chinese where title like #{title} limit 0,10
    </select>

</mapper>